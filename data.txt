-- ============================================
-- 급여 및 인사 관리 시스템 완전 설정
-- 테이블 생성부터 샘플 데이터까지 한번에 처리
-- Supabase SQL Editor에서 실행하세요
-- ============================================

-- 1. 기존 테이블 삭제 (완전 초기화)
DROP TABLE IF EXISTS payroll CASCADE;
DROP TABLE IF EXISTS attendance CASCADE;
DROP TABLE IF EXISTS employees CASCADE;

-- 2. 직원 테이블 생성
CREATE TABLE employees (
    id BIGSERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    position VARCHAR(100),
    department VARCHAR(100),
    hire_date DATE,
    total_annual_leave INTEGER DEFAULT 15,
    used_annual_leave INTEGER DEFAULT 0,
    remaining_annual_leave INTEGER DEFAULT 15,
    notes TEXT,
    status VARCHAR(20) DEFAULT '재직',
    email VARCHAR(255),
    phone VARCHAR(20),
    base_salary BIGINT DEFAULT 0,
    family_count INTEGER DEFAULT 1,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. 근태 테이블 생성
CREATE TABLE attendance (
    id BIGSERIAL PRIMARY KEY,
    employee_id BIGINT REFERENCES employees(id) ON DELETE CASCADE,
    date DATE NOT NULL,
    clock_in TIME,
    clock_out TIME,
    actual_hours DECIMAL(4,2),
    status VARCHAR(20) DEFAULT '정상',
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 4. 급여 테이블 생성
CREATE TABLE payroll (
    id BIGSERIAL PRIMARY KEY,
    employee_id BIGINT REFERENCES employees(id) ON DELETE CASCADE,
    pay_month VARCHAR(7) NOT NULL,
    base_salary BIGINT DEFAULT 0,
    performance_bonus BIGINT DEFAULT 0,
    attendance_allowance BIGINT DEFAULT 0,
    meal_allowance BIGINT DEFAULT 0,
    holiday_allowance BIGINT DEFAULT 0,
    position_allowance BIGINT DEFAULT 0,
    special_duty_allowance BIGINT DEFAULT 0,
    overtime_allowance BIGINT DEFAULT 0,
    skill_allowance BIGINT DEFAULT 0,
    annual_leave_allowance BIGINT DEFAULT 0,
    other_allowance BIGINT DEFAULT 0,
    national_pension BIGINT DEFAULT 0,
    health_insurance BIGINT DEFAULT 0,
    long_term_care BIGINT DEFAULT 0,
    employment_insurance BIGINT DEFAULT 0,
    income_tax BIGINT DEFAULT 0,
    resident_tax BIGINT DEFAULT 0,
    total_deductions BIGINT DEFAULT 0,
    net_pay BIGINT DEFAULT 0,
    is_paid BOOLEAN DEFAULT FALSE,
    pay_date DATE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 5. 인덱스 생성 (성능 향상)
CREATE INDEX idx_employees_status ON employees(status);
CREATE INDEX idx_employees_department ON employees(department);
CREATE INDEX idx_attendance_employee_date ON attendance(employee_id, date);
CREATE INDEX idx_attendance_date ON attendance(date);
CREATE INDEX idx_payroll_employee_month ON payroll(employee_id, pay_month);
CREATE INDEX idx_payroll_pay_month ON payroll(pay_month);

-- 6. 제약 조건 추가
ALTER TABLE employees ADD CONSTRAINT chk_status CHECK (status IN ('재직', '휴직', '퇴직'));
ALTER TABLE attendance ADD CONSTRAINT chk_attendance_status CHECK (status IN ('정상', '지각', '조퇴', '연차', '결근', '휴가'));
ALTER TABLE attendance ADD CONSTRAINT chk_actual_hours CHECK (actual_hours >= 0 AND actual_hours <= 24);
ALTER TABLE employees ADD CONSTRAINT chk_family_count CHECK (family_count >= 1 AND family_count <= 20);
ALTER TABLE employees ADD CONSTRAINT chk_base_salary CHECK (base_salary >= 0);

-- 7. 샘플 직원 데이터 삽입
INSERT INTO employees (
    name, position, department, hire_date, base_salary, family_count,
    email, phone, status, total_annual_leave, used_annual_leave, 
    remaining_annual_leave, notes
) VALUES 
(
    '홍길동', '팀장', '개발팀', '2021-03-15', 4500000, 3,
    'hong@company.com', '010-1111-2222', '재직', 18, 5, 13,
    '풀스택 개발자, React/Node.js 전문'
),
(
    '김사또', '과장', '영업팀', '2020-07-01', 4200000, 4,
    'kim.satto@company.com', '010-2222-3333', '재직', 20, 8, 12,
    '대기업 영업 전문가, B2B 세일즈 10년 경력'
),
(
    '김벼슬', '대리', '인사팀', '2022-01-10', 3200000, 2,
    'kim.byeol@company.com', '010-3333-4444', '재직', 16, 3, 13,
    '인사 관리 담당, 노무사 자격증 보유'
),
(
    '송마을', '사원', '마케팅팀', '2023-09-05', 2800000, 1,
    'song@company.com', '010-4444-5555', '재직', 15, 2, 13,
    '디지털 마케팅 전문, SNS/바이럴 마케팅'
);

-- 8. 샘플 근태 데이터 삽입
INSERT INTO attendance (employee_id, date, clock_in, clock_out, actual_hours, status, notes) VALUES
-- 홍길동 근태 (id=1)
(1, '2025-01-02', '08:45', '18:30', 8.75, '정상', ''),
(1, '2025-01-03', '09:00', '18:00', 8.0, '정상', ''),
(1, '2025-01-06', '09:15', '18:15', 8.0, '지각', '교통체증'),
(1, '2025-01-07', '08:50', '18:20', 8.5, '정상', ''),
(1, '2025-01-08', '09:00', '17:30', 7.5, '조퇴', '병원 방문'),
(1, '2025-01-09', '08:45', '19:00', 9.25, '정상', '프로젝트 야근'),
(1, '2025-01-10', '00:00', '00:00', 0.0, '연차', '개인 사유'),
(1, '2025-01-13', '08:55', '18:05', 8.17, '정상', ''),
(1, '2025-01-14', '09:00', '18:30', 8.5, '정상', ''),
(1, '2025-01-15', '08:40', '18:10', 8.5, '정상', ''),

-- 김사또 근태 (id=2)
(2, '2025-01-02', '08:30', '17:45', 8.25, '정상', ''),
(2, '2025-01-03', '08:45', '18:15', 8.5, '정상', ''),
(2, '2025-01-06', '09:00', '18:00', 8.0, '정상', ''),
(2, '2025-01-07', '08:50', '19:30', 9.67, '정상', '고객사 미팅'),
(2, '2025-01-08', '08:45', '18:00', 8.25, '정상', ''),
(2, '2025-01-09', '09:00', '17:00', 7.0, '조퇴', '가족 행사'),
(2, '2025-01-10', '08:30', '18:30', 9.0, '정상', ''),
(2, '2025-01-13', '09:10', '18:10', 8.0, '지각', ''),
(2, '2025-01-14', '08:45', '18:15', 8.5, '정상', ''),
(2, '2025-01-15', '08:40', '17:50', 8.17, '정상', ''),

-- 김벼슬 근태 (id=3)
(3, '2025-01-02', '09:00', '18:00', 8.0, '정상', ''),
(3, '2025-01-03', '09:05', '18:05', 8.0, '지각', ''),
(3, '2025-01-06', '08:55', '18:00', 8.08, '정상', ''),
(3, '2025-01-07', '09:00', '18:15', 8.25, '정상', ''),
(3, '2025-01-08', '09:00', '18:00', 8.0, '정상', ''),
(3, '2025-01-09', '08:50', '17:30', 7.67, '조퇴', '반차 사용'),
(3, '2025-01-10', '00:00', '00:00', 0.0, '연차', '병가'),
(3, '2025-01-13', '08:45', '18:30', 8.75, '정상', ''),
(3, '2025-01-14', '09:00', '18:00', 8.0, '정상', ''),
(3, '2025-01-15', '08:55', '18:10', 8.25, '정상', ''),

-- 송마을 근태 (id=4)
(4, '2025-01-02', '09:15', '18:15', 8.0, '지각', '지하철 연착'),
(4, '2025-01-03', '09:00', '18:30', 8.5, '정상', ''),
(4, '2025-01-06', '08:45', '18:00', 8.25, '정상', ''),
(4, '2025-01-07', '09:00', '18:45', 8.75, '정상', '캠페인 준비'),
(4, '2025-01-08', '09:05', '18:05', 8.0, '지각', ''),
(4, '2025-01-09', '09:00', '19:00', 9.0, '정상', '이벤트 진행'),
(4, '2025-01-10', '08:50', '18:20', 8.5, '정상', ''),
(4, '2025-01-13', '09:00', '18:00', 8.0, '정상', ''),
(4, '2025-01-14', '08:45', '17:45', 8.0, '정상', ''),
(4, '2025-01-15', '09:10', '18:10', 8.0, '지각', '');

-- 9. 2024년 12월 급여 데이터 (지급 완료)
INSERT INTO payroll (
    employee_id, pay_month, base_salary, performance_bonus, meal_allowance, 
    position_allowance, overtime_allowance, national_pension, health_insurance, 
    long_term_care, employment_insurance, income_tax, resident_tax, 
    total_deductions, net_pay, is_paid, pay_date
) VALUES 
-- 홍길동 2024년 12월
(1, '2024-12', 4500000, 300000, 130000, 200000, 150000, 
 202500, 159525, 20658, 40500, 156000, 15600, 594283, 4735717, true, '2024-12-25'),

-- 김사또 2024년 12월
(2, '2024-12', 4200000, 250000, 130000, 150000, 80000,
 189000, 148890, 19276, 37800, 128000, 12800, 535766, 4274234, true, '2024-12-25'),

-- 김벼슬 2024년 12월
(3, '2024-12', 3200000, 150000, 130000, 100000, 50000,
 144000, 113440, 14684, 28800, 78000, 7800, 386724, 3243276, true, '2024-12-25'),

-- 송마을 2024년 12월
(4, '2024-12', 2800000, 100000, 130000, 50000, 70000,
 126000, 99260, 12849, 25200, 58000, 5800, 327109, 2822891, true, '2024-12-25');

-- 10. 2025년 1월 급여 데이터 (지급 대기, pay_date는 NULL)
INSERT INTO payroll (
    employee_id, pay_month, base_salary, performance_bonus, meal_allowance, 
    position_allowance, overtime_allowance, national_pension, health_insurance, 
    long_term_care, employment_insurance, income_tax, resident_tax, 
    total_deductions, net_pay, is_paid
) VALUES 
-- 홍길동 2025년 1월
(1, '2025-01', 4500000, 0, 130000, 200000, 120000, 
 202500, 159525, 20658, 40500, 156000, 15600, 594283, 4455717, false),

-- 김사또 2025년 1월
(2, '2025-01', 4200000, 0, 130000, 150000, 100000,
 189000, 148890, 19276, 37800, 128000, 12800, 535766, 4044234, false),

-- 김벼슬 2025년 1월
(3, '2025-01', 3200000, 0, 130000, 100000, 40000,
 144000, 113440, 14684, 28800, 78000, 7800, 386724, 3083276, false),

-- 송마을 2025년 1월
(4, '2025-01', 2800000, 0, 130000, 50000, 90000,
 126000, 99260, 12849, 25200, 58000, 5800, 327109, 2772891, false);

-- 11. 데이터 확인 쿼리
SELECT '✅ 직원 데이터' AS 항목, COUNT(*) AS 건수 FROM employees
UNION ALL
SELECT '✅ 근태 데이터' AS 항목, COUNT(*) AS 건수 FROM attendance
UNION ALL  
SELECT '✅ 급여 데이터' AS 항목, COUNT(*) AS 건수 FROM payroll;

-- 12. 샘플 조회 쿼리

-- 직원 정보
SELECT 
    '👥 직원 정보' AS 구분,
    name AS 이름,
    position AS 직급,
    department AS 부서,
    base_salary AS 기본급,
    family_count AS 부양가족수,
    status AS 상태
FROM employees 
ORDER BY base_salary DESC;

-- 최근 근태 현황
SELECT 
    '⏰ 최근 근태' AS 구분,
    e.name AS 이름,
    a.date AS 날짜,
    a.clock_in AS 출근,
    a.clock_out AS 퇴근,
    a.actual_hours AS 근무시간,
    a.status AS 상태
FROM attendance a
JOIN employees e ON a.employee_id = e.id
ORDER BY a.date DESC, e.name
LIMIT 10;

-- 급여 현황 (2025년 1월)
SELECT 
    '💰 2025년 1월 급여' AS 구분,
    e.name AS 이름,
    p.base_salary AS 기본급,
    p.total_deductions AS 총공제,
    p.net_pay AS 실지급액,
    CASE WHEN p.is_paid THEN '지급완료' ELSE '지급대기' END AS 상태
FROM payroll p
JOIN employees e ON p.employee_id = e.id  
WHERE p.pay_month = '2025-01'
ORDER BY p.net_pay DESC;

-- 완료 메시지
SELECT '🎉 급여 관리 시스템 셋업 완료!' AS 완료;